/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  6
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       surfaceScalarField;
    location    "0";
    object      phib;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 3 -1 0 0 0 0];

internalField   uniform 0;

boundaryField
{
    inlet
    {
        type            calculated;
        value           nonuniform List<scalar> 
25
(
-0.0004
-0.0004
-0.0004
-0.0004
-0.0004
-0.0004
-0.000399999999999996
-0.0004
-0.0004
-0.0004
-0.0004
-0.0004
-0.0004
-0.0004
-0.0004
-0.0004
-0.0004
-0.0004
-0.000399999999999996
-0.0004
-0.0004
-0.0004
-0.0004
-0.0004
-0.0004
)
;
    }
    outlet
    {
        type            calculated;
        value           nonuniform List<scalar> 
25
(
0.000400013224753052
0.000400013016152398
0.000400012602243259
0.000400011989557903
0.000400011187765389
0.000400010209518642
0.000400009070254461
0.000400007787949366
0.000400006382835614
0.000400004877081475
0.000400003294441064
0.000400001659879247
0.000399999999177631
0.000399998338527657
0.000399996704117577
0.000399995121719428
0.000399993616282861
0.000399992211542064
0.000399990929641856
0.000399989790789
0.000399988812934276
0.000399988011489748
0.000399987399086551
0.000399986985375982
0.000399986776877829
)
;
    }
    top
    {
        type            symmetryPlane;
        value           uniform 0;
    }
    bottomwall
    {
        type            fixedValue;
        value           uniform 0;
    }
    bottomsym
    {
        type            fixedValue;
        value           uniform 0;
    }
    cavitywall
    {
        type            fixedValue;
        value           uniform 0;
    }
    frontAndBack
    {
        type            empty;
        value           nonuniform 0();
    }
}

// ************************************************************************* //
