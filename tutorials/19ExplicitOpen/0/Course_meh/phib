/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  6
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       surfaceScalarField;
    location    "0";
    object      phib;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 3 -1 0 0 0 0];

internalField   uniform 0;

boundaryField
{
    inlet
    {
        type            fixedValue;
        value           nonuniform List<scalar> 
25
(
-0.0004
-0.0004
-0.0004
-0.0004
-0.0004
-0.0004
-0.000399999999999996
-0.0004
-0.0004
-0.0004
-0.0004
-0.0004
-0.0004
-0.0004
-0.0004
-0.0004
-0.0004
-0.0004
-0.000399999999999996
-0.0004
-0.0004
-0.0004
-0.0004
-0.0004
-0.0004
)
;    
   }
   outlet
    {
        type            calculated;
        value           nonuniform List<scalar> 
25
(
0.000400013224753013
0.000400013016152359
0.00040001260224322
0.000400011989557865
0.000400011187765352
0.000400010209518605
0.000400009070254422
0.000400007787949327
0.000400006382835575
0.000400004877081437
0.000400003294441026
0.00040000165987921
0.000399999999177597
0.000399998338527625
0.000399996704117546
0.000399995121719397
0.00039999361628283
0.000399992211542032
0.000399990929641823
0.000399989790788967
0.000399988812934245
0.000399988011489716
0.00039998739908652
0.000399986985375951
0.000399986776877797
)
;
    }
    top
    {
        type            fixedValue;
        value           uniform 0;
    }
    bottomwall
    {
        type            fixedValue;
        value           uniform 0;
    }
    bottomsym
    {
        type            fixedValue;
        value           uniform 0;
    }
    cavitywall
    {
        type            fixedValue;
        value           uniform 0;
    }
    frontAndBack
    {
        type            empty;
        value           nonuniform 0();
    }
}

// ************************************************************************* //
