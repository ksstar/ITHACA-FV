/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.2.2                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

solvers
{
    p
    {
        solver           GAMG;
        tolerance        1e-6;
        relTol           0.1;
        smoother         GaussSeidel;
 
    }

    pFinal
    {
        $p;
        tolerance        1e-6;
        relTol           0.1;
    }

    "(U|k|omega|epsilon)"
    {
	solver           smoothSolver;
        tolerance        1e-5;
        relTol           0.1;
        smoother         symGaussSeidel;
  
    }

    "(U|k|omega|epsilon)Final"
    {
        $U;
        tolerance       1e-05;
        relTol          0.1;
    }
    Phi
    {
        $p;
    }

    u_sup
    {
        solver          smoothSolver;
        smoother        symGaussSeidel;
        nPreSweeps       0;
        nPostSweeps      2;
        tolerance       1e-05;
        relTol          0.1;
    }

    Usup
    {
        type            coupled;  // optional, defaults to segregated
        solver          PBiCCCG;
        preconditioner  DILU;
        tolerance       (1e-06 1e-06 1e-06);
        relTol          (0 0 0);
    }
}

relaxationFactors
{
    fields
    {
        p               0.5;
    }
    equations
    {
        U               0.7;
        nuTilda         0.7;
	k               0.7;
        epsilon         0.7;
        R               0.7;
    }
}

potentialFlow
{
    nNonOrthogonalCorrectors 10;
}

PISO
{
    nCorrectors     2;
    nNonOrthogonalCorrectors 0;
    pRefCell        0;
    pRefValue       0;
}

PIMPLE
{
    nOuterCorrectors    1;
    nCorrectors         2;
    nNonOrthogonalCorrectors 0;
    pRefCell        0;
    pRefValue       0;
}
SIMPLE
{
    nNonOrthogonalCorrectors 0;
   // nOuterCorrectors    2;
   // nCorrectors         2;
    pRefCell        0;
    pRefValue       0;

    residualControl
    {
        p               1e-2;
        U               1e-3;
        "(k|epsilon|omega|f|v2)" 1e-3;
    }


}


// ************************************************************************* //
